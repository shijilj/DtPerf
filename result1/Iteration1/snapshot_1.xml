<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="1">
  <HTTPTask id="1" hostname="dtqa1.epic.discounttire.com" path="/" url="https://dtqa1.epic.discounttire.com/" ip="10.104.0.222" port="443" client_ip="10.0.147.39" client_port="6953" connectionId="1672" origin="Primary" startDateTime="2018-05-17T14:47:03.399-07:00" startTime="460" endTime="1891" blockedTime="38" dnsTime="2" connectTime="1195" sendTime="65" waitTime="46" receiveTime="85" sslNegotiateTime="0" responseBodySize="110645">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="x-dynaTrace" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TkE9RFRDX0hvbWU7IFNOPUh5YnJpc19TVEdfRFRDX0FQSTsgVEU9SHlicmlzX1NUR19BUElfTG9hZFRlc3Q=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzcuMDsgcnY6MTEuMCkgbGlrZSBHZWNrbw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tVVM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZHRxYTEuZXBpYy5kaXNjb3VudHRpcmUuY29t</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC8gSFRUUC8xLjENCngtZHluYVRyYWNlOiBOQT1EVENfSG9tZTsgU049SHlicmlzX1NUR19EVENfQVBJOyBURT1IeWJyaXNfU1RHX0FQSV9Mb2FkVGVzdA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzcuMDsgcnY6MTEuMCkgbGlrZSBHZWNrbw0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTDQpBY2NlcHQ6ICovKg0KQ29ubmVjdGlvbjogS2VlcC1BbGl2ZQ0KSG9zdDogZHRxYTEuZXBpYy5kaXNjb3VudHRpcmUuY29tDQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>0</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Content-Language" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9odG1sO2NoYXJzZXQ9VVRGLTg=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAxNyBNYXkgMjAxOCAyMTo0NzowNCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="dynaTrace" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>UFQ9MTc0OTI7UEE9LTk1OTY2NzM4NjtTUD15X1FBO1BTPS01OTM0MzE1Njc=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Server" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QXBhY2hlLUNveW90ZS8xLjE=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Set-Cookie" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZHRDb29raWU9QUE2OUU4MkUxRjM2OTZFNDQwMDY4NkNFNUJGRDBBRUY7IERvbWFpbj0uZGlzY291bnR0aXJlLmNvbTsgUGF0aD0v</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Set-Cookie" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SlNFU1NJT05JRD0zODBBMzVBRTBBM0IzNDBBNjA1ODM2NzhBM0I0NkYzRTsgUGF0aD0vOyBTZWN1cmU7IEh0dHBPbmx5</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Set-Cookie" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SlNFU1NJT05JRD0zODBBMzVBRTBBM0IzNDBBNjA1ODM2NzhBM0I0NkYzRTsgUGF0aD0vOyBIdHRwT25seQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Set-Cookie" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>c2VhcmNoQXJlYT04NTI1NTsgUGF0aD0v</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Set-Cookie" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bXlTdG9yZUNvb2tpZT0xMzQ0OyBFeHBpcmVzPVNhdCwgMTgtTWF5LTIwMTkgMDM6NDc6MDQgR01UOyBQYXRoPS8=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Set-Cookie" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QVdTRUxCPTRGODVDOTEzMDg2NDUyMjRCMTI2QTEzQTMxMDZERDQ2OTcwODQ1REM1NzQyQzFCRUIwRkZBNkY5NzM5NUEyMUYxMDFEOUU1QTQ5MDkzMEJGRjA0MkI0OTVGNzBBODdGOTA3OUQ3RDhCQjY1RTlEQzcwQUU2MEQyQzgyNDdGNUFGRDA0ODM5RTA2RDZBMzk0NEFENTVCRTMxMDZEMzY0MTVFRjM0NjJFODE2O1BBVEg9LztIVFRQT05MWQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-dynaTrace" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>UFQ9MTc0OTI7UEE9LTk1OTY2NzM4NjtTUD15X1FBO1BTPS01OTM0MzE1Njc=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-dynaTrace-JS-Agent" index="12">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dHJ1ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="transfer-encoding" index="13">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Y2h1bmtlZA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="14">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LUxhbmd1YWdlOiBlbg0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7Y2hhcnNldD1VVEYtOA0KRGF0ZTogVGh1LCAxNyBNYXkgMjAxOCAyMTo0NzowNCBHTVQNCmR5bmFUcmFjZTogUFQ9MTc0OTI7UEE9LTk1OTY2NzM4NjtTUD15X1FBO1BTPS01OTM0MzE1NjcNClNlcnZlcjogQXBhY2hlLUNveW90ZS8xLjENClNldC1Db29raWU6IGR0Q29va2llPUFBNjlFODJFMUYzNjk2RTQ0MDA2ODZDRTVCRkQwQUVGOyBEb21haW49LmRpc2NvdW50dGlyZS5jb207IFBhdGg9Lw0KU2V0LUNvb2tpZTogSlNFU1NJT05JRD0zODBBMzVBRTBBM0IzNDBBNjA1ODM2NzhBM0I0NkYzRTsgUGF0aD0vOyBTZWN1cmU7IEh0dHBPbmx5DQpTZXQtQ29va2llOiBKU0VTU0lPTklEPTM4MEEzNUFFMEEzQjM0MEE2MDU4MzY3OEEzQjQ2RjNFOyBQYXRoPS87IEh0dHBPbmx5DQpTZXQtQ29va2llOiBzZWFyY2hBcmVhPTg1MjU1OyBQYXRoPS8NClNldC1Db29raWU6IG15U3RvcmVDb29raWU9MTM0NDsgRXhwaXJlcz1TYXQsIDE4LU1heS0yMDE5IDAzOjQ3OjA0IEdNVDsgUGF0aD0vDQpTZXQtQ29va2llOiBBV1NFTEI9NEY4NUM5MTMwODY0NTIyNEIxMjZBMTNBMzEwNkRENDY5NzA4NDVEQzU3NDJDMUJFQjBGRkE2Rjk3Mzk1QTIxRjEwMUQ5RTVBNDkwOTMwQkZGMDQyQjQ5NUY3MEE4N0Y5MDc5RDdEOEJCNjVFOURDNzBBRTYwRDJDODI0N0Y1QUZEMDQ4MzlFMDZENkEzOTQ0QUQ1NUJFMzEwNkQzNjQxNUVGMzQ2MkU4MTY7UEFUSD0vO0hUVFBPTkxZDQpYLWR5bmFUcmFjZTogUFQ9MTc0OTI7UEE9LTk1OTY2NzM4NjtTUD15X1FBO1BTPS01OTM0MzE1NjcNClgtZHluYVRyYWNlLUpTLUFnZW50OiB0cnVlDQp0cmFuc2Zlci1lbmNvZGluZzogY2h1bmtlZA0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPResponse>
  </HTTPTask>
</HTTPSnapshot>